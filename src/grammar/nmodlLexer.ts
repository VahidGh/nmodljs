// Generated from nmodl.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class nmodlLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly T__39 = 40;
	public static readonly T__40 = 41;
	public static readonly T__41 = 42;
	public static readonly T__42 = 43;
	public static readonly T__43 = 44;
	public static readonly T__44 = 45;
	public static readonly T__45 = 46;
	public static readonly T__46 = 47;
	public static readonly T__47 = 48;
	public static readonly T__48 = 49;
	public static readonly T__49 = 50;
	public static readonly T__50 = 51;
	public static readonly T__51 = 52;
	public static readonly T__52 = 53;
	public static readonly T__53 = 54;
	public static readonly T__54 = 55;
	public static readonly T__55 = 56;
	public static readonly T__56 = 57;
	public static readonly T__57 = 58;
	public static readonly TIMES = 59;
	public static readonly DIVIDE = 60;
	public static readonly PLUS = 61;
	public static readonly MINUS = 62;
	public static readonly POWER = 63;
	public static readonly LPAREN = 64;
	public static readonly RPAREN = 65;
	public static readonly LBRACE = 66;
	public static readonly RBRACE = 67;
	public static readonly LBRACKET = 68;
	public static readonly RBRACKET = 69;
	public static readonly COMMA = 70;
	public static readonly APOSTROPHE = 71;
	public static readonly EQUALS = 72;
	public static readonly NOT_EQUALS = 73;
	public static readonly DOT = 74;
	public static readonly LESS = 75;
	public static readonly GREATER = 76;
	public static readonly COLON = 77;
	public static readonly ID = 78;
	public static readonly SIGN = 79;
	public static readonly NUMBER = 80;
	public static readonly INT = 81;
	public static readonly FLOAT = 82;
	public static readonly STRING = 83;
	public static readonly TITLE = 84;
	public static readonly IF = 85;
	public static readonly ELSE = 86;
	public static readonly ELSEIF = 87;
	public static readonly WHILE = 88;
	public static readonly BUILTIN_FUNC = 89;
	public static readonly USER_FUNC = 90;
	public static readonly WS = 91;
	public static readonly LINE_COMMENT = 92;
	public static readonly COMMENT_BLOCK = 93;
	public static readonly VERBATIM_BLOCK = 94;
	public static readonly PRINTF = 95;
	public static readonly NEWLINE = 96;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'<='", 
                                                            "'>='", "'=='", 
                                                            "'&&'", "'||'", 
                                                            "'LOCAL'", "'FUNCTION'", 
                                                            "'PROCEDURE'", 
                                                            "'FUNCTION_TABLE'", 
                                                            "'NEURON'", 
                                                            "'UNITS'", "'PARAMETER'", 
                                                            "'ASSIGNED'", 
                                                            "'STATE'", "'_'", 
                                                            "'KINETIC'", 
                                                            "'~'", "'<->'", 
                                                            "'<<'", "'COMPARTMENT'", 
                                                            "'CONSERVE'", 
                                                            "'TABLE '", 
                                                            "'DEPEND '", 
                                                            "'FROM '", "'TO '", 
                                                            "'WITH '", "'while'", 
                                                            "'INITIAL'", 
                                                            "'DERIVATIVE'", 
                                                            "'BREAKPOINT'", 
                                                            "'SOLVE'", "'METHOD'", 
                                                            "'STEADYSTATE'", 
                                                            "'derivimplicit'", 
                                                            "'sparse'", 
                                                            "'cnexp'", "'euler'", 
                                                            "'THREADSAFE'", 
                                                            "'SUFFIX'", 
                                                            "'GLOBAL'", 
                                                            "'RANGE'", "'POINTER'", 
                                                            "'POINT_PROCESS'", 
                                                            "'BBCOREPOINTER'", 
                                                            "'RANDOM'", 
                                                            "'ARTIFICIAL_CELL'", 
                                                            "'EXTERNAL'", 
                                                            "'NONSPECIFIC_CURRENT'", 
                                                            "'USEION'", 
                                                            "'READ'", "'WRITE'", 
                                                            "'VALENCE'", 
                                                            "'UNITSON'", 
                                                            "'UNITSOFF'", 
                                                            "'INCLUDE'", 
                                                            "'INDEPENDENT'", 
                                                            "'START '", 
                                                            "'CONSTANT'", 
                                                            "'*'", "'/'", 
                                                            "'+'", "'-'", 
                                                            "'^'", "'('", 
                                                            "')'", "'{'", 
                                                            "'}'", "'['", 
                                                            "']'", "','", 
                                                            "'''", "'='", 
                                                            "'!='", "'.'", 
                                                            "'<'", "'>'", 
                                                            "':'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, "TIMES", 
                                                             "DIVIDE", "PLUS", 
                                                             "MINUS", "POWER", 
                                                             "LPAREN", "RPAREN", 
                                                             "LBRACE", "RBRACE", 
                                                             "LBRACKET", 
                                                             "RBRACKET", 
                                                             "COMMA", "APOSTROPHE", 
                                                             "EQUALS", "NOT_EQUALS", 
                                                             "DOT", "LESS", 
                                                             "GREATER", 
                                                             "COLON", "ID", 
                                                             "SIGN", "NUMBER", 
                                                             "INT", "FLOAT", 
                                                             "STRING", "TITLE", 
                                                             "IF", "ELSE", 
                                                             "ELSEIF", "WHILE", 
                                                             "BUILTIN_FUNC", 
                                                             "USER_FUNC", 
                                                             "WS", "LINE_COMMENT", 
                                                             "COMMENT_BLOCK", 
                                                             "VERBATIM_BLOCK", 
                                                             "PRINTF", "NEWLINE" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "TIMES", "DIVIDE", "PLUS", "MINUS", "POWER", "LPAREN", "RPAREN", 
		"LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "COMMA", "APOSTROPHE", "EQUALS", 
		"NOT_EQUALS", "DOT", "LESS", "GREATER", "COLON", "ID", "DIGIT", "SIGN", 
		"NUMBER", "SIGN_NUMBER", "INT", "FLOAT", "STRING", "TITLE", "IF", "ELSE", 
		"ELSEIF", "WHILE", "BUILTIN_FUNC", "USER_FUNC", "UNIT_ID_CHAR", "WS", 
		"LINE_COMMENT", "COMMENT_BLOCK", "VERBATIM_BLOCK", "PRINTF", "NEWLINE",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, nmodlLexer._ATN, nmodlLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "nmodl.g4"; }

	public get literalNames(): (string | null)[] { return nmodlLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return nmodlLexer.symbolicNames; }
	public get ruleNames(): string[] { return nmodlLexer.ruleNames; }

	public get serializedATN(): number[] { return nmodlLexer._serializedATN; }

	public get channelNames(): string[] { return nmodlLexer.channelNames; }

	public get modeNames(): string[] { return nmodlLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,96,1068,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,
	74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,
	2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,
	89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,
	7,96,2,97,7,97,2,98,7,98,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,
	3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
	6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
	8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,
	1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,
	12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,
	1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,
	17,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
	1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,
	1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,
	26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,
	1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,
	29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,
	1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
	32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,
	1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,
	36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
	1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,
	39,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
	1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,
	43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,
	1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,
	45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,
	1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,
	47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
	1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,
	51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,
	1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,
	54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,
	1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,
	58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,
	1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,
	72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,5,77,697,8,77,
	10,77,12,77,700,9,77,1,78,1,78,1,79,1,79,1,80,4,80,707,8,80,11,80,12,80,
	708,1,80,1,80,5,80,713,8,80,10,80,12,80,716,9,80,3,80,718,8,80,1,80,1,80,
	4,80,722,8,80,11,80,12,80,723,3,80,726,8,80,1,80,1,80,3,80,730,8,80,1,80,
	4,80,733,8,80,11,80,12,80,734,3,80,737,8,80,1,81,3,81,740,8,81,1,81,4,81,
	743,8,81,11,81,12,81,744,1,81,1,81,5,81,749,8,81,10,81,12,81,752,9,81,3,
	81,754,8,81,1,81,1,81,4,81,758,8,81,11,81,12,81,759,3,81,762,8,81,1,81,
	1,81,3,81,766,8,81,1,81,4,81,769,8,81,11,81,12,81,770,3,81,773,8,81,1,82,
	4,82,776,8,82,11,82,12,82,777,1,83,4,83,781,8,83,11,83,12,83,782,1,83,1,
	83,4,83,787,8,83,11,83,12,83,788,1,84,1,84,5,84,793,8,84,10,84,12,84,796,
	9,84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,85,1,85,5,85,807,8,85,10,85,12,
	85,810,9,85,1,86,1,86,1,86,1,86,3,86,816,8,86,1,86,5,86,819,8,86,10,86,
	12,86,822,9,86,1,86,1,86,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,3,87,834,
	8,87,1,87,5,87,837,8,87,10,87,12,87,840,9,87,1,87,1,87,1,88,1,88,1,88,1,
	88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,3,88,858,8,88,1,88,
	5,88,861,8,88,10,88,12,88,864,9,88,1,88,1,88,1,89,1,89,1,89,1,89,1,89,1,
	89,1,89,1,89,1,89,1,89,3,89,878,8,89,1,89,5,89,881,8,89,10,89,12,89,884,
	9,89,1,89,1,89,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,
	90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,
	1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,
	90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,
	1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,3,90,953,8,90,1,90,1,
	90,1,91,1,91,4,91,959,8,91,11,91,12,91,960,1,91,1,91,1,92,1,92,1,93,4,93,
	968,8,93,11,93,12,93,969,1,93,1,93,1,94,1,94,5,94,976,8,94,10,94,12,94,
	979,9,94,1,94,3,94,982,8,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,1,95,1,95,
	1,95,1,95,5,95,995,8,95,10,95,12,95,998,9,95,1,95,1,95,1,95,1,95,1,95,1,
	95,1,95,1,95,1,95,1,95,1,95,1,95,1,95,1,96,1,96,1,96,1,96,1,96,1,96,1,96,
	1,96,1,96,1,96,5,96,1023,8,96,10,96,12,96,1026,9,96,1,96,1,96,1,96,1,96,
	1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,97,1,97,1,97,1,97,1,
	97,1,97,1,97,1,97,1,97,1,97,1,97,5,97,1053,8,97,10,97,12,97,1056,9,97,5,
	97,1058,8,97,10,97,12,97,1061,9,97,1,97,1,97,1,97,1,97,1,98,1,98,2,996,
	1024,0,99,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
	13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
	25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,
	37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,
	49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,
	119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,
	70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,0,159,79,
	161,80,163,0,165,81,167,82,169,83,171,84,173,85,175,86,177,87,179,88,181,
	89,183,90,185,0,187,91,189,92,191,93,193,94,195,95,197,96,1,0,11,3,0,65,
	90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,43,43,45,45,
	2,0,69,69,101,101,3,0,10,10,13,13,34,34,2,0,10,10,13,13,5,0,42,42,46,57,
	65,90,94,95,97,122,3,0,9,10,13,13,32,32,2,0,58,58,63,63,1,0,41,41,1116,
	0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
	0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
	1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
	0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
	1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
	0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
	1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
	0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
	1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
	0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,
	0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,
	121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,
	1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,
	0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,
	0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,165,1,0,0,
	0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,
	0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,187,1,0,0,0,0,
	189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,1,199,
	1,0,0,0,3,202,1,0,0,0,5,205,1,0,0,0,7,208,1,0,0,0,9,211,1,0,0,0,11,214,
	1,0,0,0,13,220,1,0,0,0,15,229,1,0,0,0,17,239,1,0,0,0,19,254,1,0,0,0,21,
	261,1,0,0,0,23,267,1,0,0,0,25,277,1,0,0,0,27,286,1,0,0,0,29,292,1,0,0,0,
	31,294,1,0,0,0,33,302,1,0,0,0,35,304,1,0,0,0,37,308,1,0,0,0,39,311,1,0,
	0,0,41,323,1,0,0,0,43,332,1,0,0,0,45,339,1,0,0,0,47,347,1,0,0,0,49,353,
	1,0,0,0,51,357,1,0,0,0,53,363,1,0,0,0,55,369,1,0,0,0,57,377,1,0,0,0,59,
	388,1,0,0,0,61,399,1,0,0,0,63,405,1,0,0,0,65,412,1,0,0,0,67,424,1,0,0,0,
	69,438,1,0,0,0,71,445,1,0,0,0,73,451,1,0,0,0,75,457,1,0,0,0,77,468,1,0,
	0,0,79,475,1,0,0,0,81,482,1,0,0,0,83,488,1,0,0,0,85,496,1,0,0,0,87,510,
	1,0,0,0,89,524,1,0,0,0,91,531,1,0,0,0,93,547,1,0,0,0,95,556,1,0,0,0,97,
	576,1,0,0,0,99,583,1,0,0,0,101,588,1,0,0,0,103,594,1,0,0,0,105,602,1,0,
	0,0,107,610,1,0,0,0,109,619,1,0,0,0,111,627,1,0,0,0,113,639,1,0,0,0,115,
	646,1,0,0,0,117,655,1,0,0,0,119,657,1,0,0,0,121,659,1,0,0,0,123,661,1,0,
	0,0,125,663,1,0,0,0,127,665,1,0,0,0,129,667,1,0,0,0,131,669,1,0,0,0,133,
	671,1,0,0,0,135,673,1,0,0,0,137,675,1,0,0,0,139,677,1,0,0,0,141,679,1,0,
	0,0,143,681,1,0,0,0,145,683,1,0,0,0,147,686,1,0,0,0,149,688,1,0,0,0,151,
	690,1,0,0,0,153,692,1,0,0,0,155,694,1,0,0,0,157,701,1,0,0,0,159,703,1,0,
	0,0,161,725,1,0,0,0,163,739,1,0,0,0,165,775,1,0,0,0,167,780,1,0,0,0,169,
	790,1,0,0,0,171,799,1,0,0,0,173,815,1,0,0,0,175,833,1,0,0,0,177,857,1,0,
	0,0,179,877,1,0,0,0,181,952,1,0,0,0,183,956,1,0,0,0,185,964,1,0,0,0,187,
	967,1,0,0,0,189,973,1,0,0,0,191,985,1,0,0,0,193,1012,1,0,0,0,195,1041,1,
	0,0,0,197,1066,1,0,0,0,199,200,5,60,0,0,200,201,5,61,0,0,201,2,1,0,0,0,
	202,203,5,62,0,0,203,204,5,61,0,0,204,4,1,0,0,0,205,206,5,61,0,0,206,207,
	5,61,0,0,207,6,1,0,0,0,208,209,5,38,0,0,209,210,5,38,0,0,210,8,1,0,0,0,
	211,212,5,124,0,0,212,213,5,124,0,0,213,10,1,0,0,0,214,215,5,76,0,0,215,
	216,5,79,0,0,216,217,5,67,0,0,217,218,5,65,0,0,218,219,5,76,0,0,219,12,
	1,0,0,0,220,221,5,70,0,0,221,222,5,85,0,0,222,223,5,78,0,0,223,224,5,67,
	0,0,224,225,5,84,0,0,225,226,5,73,0,0,226,227,5,79,0,0,227,228,5,78,0,0,
	228,14,1,0,0,0,229,230,5,80,0,0,230,231,5,82,0,0,231,232,5,79,0,0,232,233,
	5,67,0,0,233,234,5,69,0,0,234,235,5,68,0,0,235,236,5,85,0,0,236,237,5,82,
	0,0,237,238,5,69,0,0,238,16,1,0,0,0,239,240,5,70,0,0,240,241,5,85,0,0,241,
	242,5,78,0,0,242,243,5,67,0,0,243,244,5,84,0,0,244,245,5,73,0,0,245,246,
	5,79,0,0,246,247,5,78,0,0,247,248,5,95,0,0,248,249,5,84,0,0,249,250,5,65,
	0,0,250,251,5,66,0,0,251,252,5,76,0,0,252,253,5,69,0,0,253,18,1,0,0,0,254,
	255,5,78,0,0,255,256,5,69,0,0,256,257,5,85,0,0,257,258,5,82,0,0,258,259,
	5,79,0,0,259,260,5,78,0,0,260,20,1,0,0,0,261,262,5,85,0,0,262,263,5,78,
	0,0,263,264,5,73,0,0,264,265,5,84,0,0,265,266,5,83,0,0,266,22,1,0,0,0,267,
	268,5,80,0,0,268,269,5,65,0,0,269,270,5,82,0,0,270,271,5,65,0,0,271,272,
	5,77,0,0,272,273,5,69,0,0,273,274,5,84,0,0,274,275,5,69,0,0,275,276,5,82,
	0,0,276,24,1,0,0,0,277,278,5,65,0,0,278,279,5,83,0,0,279,280,5,83,0,0,280,
	281,5,73,0,0,281,282,5,71,0,0,282,283,5,78,0,0,283,284,5,69,0,0,284,285,
	5,68,0,0,285,26,1,0,0,0,286,287,5,83,0,0,287,288,5,84,0,0,288,289,5,65,
	0,0,289,290,5,84,0,0,290,291,5,69,0,0,291,28,1,0,0,0,292,293,5,95,0,0,293,
	30,1,0,0,0,294,295,5,75,0,0,295,296,5,73,0,0,296,297,5,78,0,0,297,298,5,
	69,0,0,298,299,5,84,0,0,299,300,5,73,0,0,300,301,5,67,0,0,301,32,1,0,0,
	0,302,303,5,126,0,0,303,34,1,0,0,0,304,305,5,60,0,0,305,306,5,45,0,0,306,
	307,5,62,0,0,307,36,1,0,0,0,308,309,5,60,0,0,309,310,5,60,0,0,310,38,1,
	0,0,0,311,312,5,67,0,0,312,313,5,79,0,0,313,314,5,77,0,0,314,315,5,80,0,
	0,315,316,5,65,0,0,316,317,5,82,0,0,317,318,5,84,0,0,318,319,5,77,0,0,319,
	320,5,69,0,0,320,321,5,78,0,0,321,322,5,84,0,0,322,40,1,0,0,0,323,324,5,
	67,0,0,324,325,5,79,0,0,325,326,5,78,0,0,326,327,5,83,0,0,327,328,5,69,
	0,0,328,329,5,82,0,0,329,330,5,86,0,0,330,331,5,69,0,0,331,42,1,0,0,0,332,
	333,5,84,0,0,333,334,5,65,0,0,334,335,5,66,0,0,335,336,5,76,0,0,336,337,
	5,69,0,0,337,338,5,32,0,0,338,44,1,0,0,0,339,340,5,68,0,0,340,341,5,69,
	0,0,341,342,5,80,0,0,342,343,5,69,0,0,343,344,5,78,0,0,344,345,5,68,0,0,
	345,346,5,32,0,0,346,46,1,0,0,0,347,348,5,70,0,0,348,349,5,82,0,0,349,350,
	5,79,0,0,350,351,5,77,0,0,351,352,5,32,0,0,352,48,1,0,0,0,353,354,5,84,
	0,0,354,355,5,79,0,0,355,356,5,32,0,0,356,50,1,0,0,0,357,358,5,87,0,0,358,
	359,5,73,0,0,359,360,5,84,0,0,360,361,5,72,0,0,361,362,5,32,0,0,362,52,
	1,0,0,0,363,364,5,119,0,0,364,365,5,104,0,0,365,366,5,105,0,0,366,367,5,
	108,0,0,367,368,5,101,0,0,368,54,1,0,0,0,369,370,5,73,0,0,370,371,5,78,
	0,0,371,372,5,73,0,0,372,373,5,84,0,0,373,374,5,73,0,0,374,375,5,65,0,0,
	375,376,5,76,0,0,376,56,1,0,0,0,377,378,5,68,0,0,378,379,5,69,0,0,379,380,
	5,82,0,0,380,381,5,73,0,0,381,382,5,86,0,0,382,383,5,65,0,0,383,384,5,84,
	0,0,384,385,5,73,0,0,385,386,5,86,0,0,386,387,5,69,0,0,387,58,1,0,0,0,388,
	389,5,66,0,0,389,390,5,82,0,0,390,391,5,69,0,0,391,392,5,65,0,0,392,393,
	5,75,0,0,393,394,5,80,0,0,394,395,5,79,0,0,395,396,5,73,0,0,396,397,5,78,
	0,0,397,398,5,84,0,0,398,60,1,0,0,0,399,400,5,83,0,0,400,401,5,79,0,0,401,
	402,5,76,0,0,402,403,5,86,0,0,403,404,5,69,0,0,404,62,1,0,0,0,405,406,5,
	77,0,0,406,407,5,69,0,0,407,408,5,84,0,0,408,409,5,72,0,0,409,410,5,79,
	0,0,410,411,5,68,0,0,411,64,1,0,0,0,412,413,5,83,0,0,413,414,5,84,0,0,414,
	415,5,69,0,0,415,416,5,65,0,0,416,417,5,68,0,0,417,418,5,89,0,0,418,419,
	5,83,0,0,419,420,5,84,0,0,420,421,5,65,0,0,421,422,5,84,0,0,422,423,5,69,
	0,0,423,66,1,0,0,0,424,425,5,100,0,0,425,426,5,101,0,0,426,427,5,114,0,
	0,427,428,5,105,0,0,428,429,5,118,0,0,429,430,5,105,0,0,430,431,5,109,0,
	0,431,432,5,112,0,0,432,433,5,108,0,0,433,434,5,105,0,0,434,435,5,99,0,
	0,435,436,5,105,0,0,436,437,5,116,0,0,437,68,1,0,0,0,438,439,5,115,0,0,
	439,440,5,112,0,0,440,441,5,97,0,0,441,442,5,114,0,0,442,443,5,115,0,0,
	443,444,5,101,0,0,444,70,1,0,0,0,445,446,5,99,0,0,446,447,5,110,0,0,447,
	448,5,101,0,0,448,449,5,120,0,0,449,450,5,112,0,0,450,72,1,0,0,0,451,452,
	5,101,0,0,452,453,5,117,0,0,453,454,5,108,0,0,454,455,5,101,0,0,455,456,
	5,114,0,0,456,74,1,0,0,0,457,458,5,84,0,0,458,459,5,72,0,0,459,460,5,82,
	0,0,460,461,5,69,0,0,461,462,5,65,0,0,462,463,5,68,0,0,463,464,5,83,0,0,
	464,465,5,65,0,0,465,466,5,70,0,0,466,467,5,69,0,0,467,76,1,0,0,0,468,469,
	5,83,0,0,469,470,5,85,0,0,470,471,5,70,0,0,471,472,5,70,0,0,472,473,5,73,
	0,0,473,474,5,88,0,0,474,78,1,0,0,0,475,476,5,71,0,0,476,477,5,76,0,0,477,
	478,5,79,0,0,478,479,5,66,0,0,479,480,5,65,0,0,480,481,5,76,0,0,481,80,
	1,0,0,0,482,483,5,82,0,0,483,484,5,65,0,0,484,485,5,78,0,0,485,486,5,71,
	0,0,486,487,5,69,0,0,487,82,1,0,0,0,488,489,5,80,0,0,489,490,5,79,0,0,490,
	491,5,73,0,0,491,492,5,78,0,0,492,493,5,84,0,0,493,494,5,69,0,0,494,495,
	5,82,0,0,495,84,1,0,0,0,496,497,5,80,0,0,497,498,5,79,0,0,498,499,5,73,
	0,0,499,500,5,78,0,0,500,501,5,84,0,0,501,502,5,95,0,0,502,503,5,80,0,0,
	503,504,5,82,0,0,504,505,5,79,0,0,505,506,5,67,0,0,506,507,5,69,0,0,507,
	508,5,83,0,0,508,509,5,83,0,0,509,86,1,0,0,0,510,511,5,66,0,0,511,512,5,
	66,0,0,512,513,5,67,0,0,513,514,5,79,0,0,514,515,5,82,0,0,515,516,5,69,
	0,0,516,517,5,80,0,0,517,518,5,79,0,0,518,519,5,73,0,0,519,520,5,78,0,0,
	520,521,5,84,0,0,521,522,5,69,0,0,522,523,5,82,0,0,523,88,1,0,0,0,524,525,
	5,82,0,0,525,526,5,65,0,0,526,527,5,78,0,0,527,528,5,68,0,0,528,529,5,79,
	0,0,529,530,5,77,0,0,530,90,1,0,0,0,531,532,5,65,0,0,532,533,5,82,0,0,533,
	534,5,84,0,0,534,535,5,73,0,0,535,536,5,70,0,0,536,537,5,73,0,0,537,538,
	5,67,0,0,538,539,5,73,0,0,539,540,5,65,0,0,540,541,5,76,0,0,541,542,5,95,
	0,0,542,543,5,67,0,0,543,544,5,69,0,0,544,545,5,76,0,0,545,546,5,76,0,0,
	546,92,1,0,0,0,547,548,5,69,0,0,548,549,5,88,0,0,549,550,5,84,0,0,550,551,
	5,69,0,0,551,552,5,82,0,0,552,553,5,78,0,0,553,554,5,65,0,0,554,555,5,76,
	0,0,555,94,1,0,0,0,556,557,5,78,0,0,557,558,5,79,0,0,558,559,5,78,0,0,559,
	560,5,83,0,0,560,561,5,80,0,0,561,562,5,69,0,0,562,563,5,67,0,0,563,564,
	5,73,0,0,564,565,5,70,0,0,565,566,5,73,0,0,566,567,5,67,0,0,567,568,5,95,
	0,0,568,569,5,67,0,0,569,570,5,85,0,0,570,571,5,82,0,0,571,572,5,82,0,0,
	572,573,5,69,0,0,573,574,5,78,0,0,574,575,5,84,0,0,575,96,1,0,0,0,576,577,
	5,85,0,0,577,578,5,83,0,0,578,579,5,69,0,0,579,580,5,73,0,0,580,581,5,79,
	0,0,581,582,5,78,0,0,582,98,1,0,0,0,583,584,5,82,0,0,584,585,5,69,0,0,585,
	586,5,65,0,0,586,587,5,68,0,0,587,100,1,0,0,0,588,589,5,87,0,0,589,590,
	5,82,0,0,590,591,5,73,0,0,591,592,5,84,0,0,592,593,5,69,0,0,593,102,1,0,
	0,0,594,595,5,86,0,0,595,596,5,65,0,0,596,597,5,76,0,0,597,598,5,69,0,0,
	598,599,5,78,0,0,599,600,5,67,0,0,600,601,5,69,0,0,601,104,1,0,0,0,602,
	603,5,85,0,0,603,604,5,78,0,0,604,605,5,73,0,0,605,606,5,84,0,0,606,607,
	5,83,0,0,607,608,5,79,0,0,608,609,5,78,0,0,609,106,1,0,0,0,610,611,5,85,
	0,0,611,612,5,78,0,0,612,613,5,73,0,0,613,614,5,84,0,0,614,615,5,83,0,0,
	615,616,5,79,0,0,616,617,5,70,0,0,617,618,5,70,0,0,618,108,1,0,0,0,619,
	620,5,73,0,0,620,621,5,78,0,0,621,622,5,67,0,0,622,623,5,76,0,0,623,624,
	5,85,0,0,624,625,5,68,0,0,625,626,5,69,0,0,626,110,1,0,0,0,627,628,5,73,
	0,0,628,629,5,78,0,0,629,630,5,68,0,0,630,631,5,69,0,0,631,632,5,80,0,0,
	632,633,5,69,0,0,633,634,5,78,0,0,634,635,5,68,0,0,635,636,5,69,0,0,636,
	637,5,78,0,0,637,638,5,84,0,0,638,112,1,0,0,0,639,640,5,83,0,0,640,641,
	5,84,0,0,641,642,5,65,0,0,642,643,5,82,0,0,643,644,5,84,0,0,644,645,5,32,
	0,0,645,114,1,0,0,0,646,647,5,67,0,0,647,648,5,79,0,0,648,649,5,78,0,0,
	649,650,5,83,0,0,650,651,5,84,0,0,651,652,5,65,0,0,652,653,5,78,0,0,653,
	654,5,84,0,0,654,116,1,0,0,0,655,656,5,42,0,0,656,118,1,0,0,0,657,658,5,
	47,0,0,658,120,1,0,0,0,659,660,5,43,0,0,660,122,1,0,0,0,661,662,5,45,0,
	0,662,124,1,0,0,0,663,664,5,94,0,0,664,126,1,0,0,0,665,666,5,40,0,0,666,
	128,1,0,0,0,667,668,5,41,0,0,668,130,1,0,0,0,669,670,5,123,0,0,670,132,
	1,0,0,0,671,672,5,125,0,0,672,134,1,0,0,0,673,674,5,91,0,0,674,136,1,0,
	0,0,675,676,5,93,0,0,676,138,1,0,0,0,677,678,5,44,0,0,678,140,1,0,0,0,679,
	680,5,39,0,0,680,142,1,0,0,0,681,682,5,61,0,0,682,144,1,0,0,0,683,684,5,
	33,0,0,684,685,5,61,0,0,685,146,1,0,0,0,686,687,5,46,0,0,687,148,1,0,0,
	0,688,689,5,60,0,0,689,150,1,0,0,0,690,691,5,62,0,0,691,152,1,0,0,0,692,
	693,5,58,0,0,693,154,1,0,0,0,694,698,7,0,0,0,695,697,7,1,0,0,696,695,1,
	0,0,0,697,700,1,0,0,0,698,696,1,0,0,0,698,699,1,0,0,0,699,156,1,0,0,0,700,
	698,1,0,0,0,701,702,7,2,0,0,702,158,1,0,0,0,703,704,7,3,0,0,704,160,1,0,
	0,0,705,707,3,157,78,0,706,705,1,0,0,0,707,708,1,0,0,0,708,706,1,0,0,0,
	708,709,1,0,0,0,709,717,1,0,0,0,710,714,5,46,0,0,711,713,3,157,78,0,712,
	711,1,0,0,0,713,716,1,0,0,0,714,712,1,0,0,0,714,715,1,0,0,0,715,718,1,0,
	0,0,716,714,1,0,0,0,717,710,1,0,0,0,717,718,1,0,0,0,718,726,1,0,0,0,719,
	721,5,46,0,0,720,722,3,157,78,0,721,720,1,0,0,0,722,723,1,0,0,0,723,721,
	1,0,0,0,723,724,1,0,0,0,724,726,1,0,0,0,725,706,1,0,0,0,725,719,1,0,0,0,
	726,736,1,0,0,0,727,729,7,4,0,0,728,730,7,3,0,0,729,728,1,0,0,0,729,730,
	1,0,0,0,730,732,1,0,0,0,731,733,3,157,78,0,732,731,1,0,0,0,733,734,1,0,
	0,0,734,732,1,0,0,0,734,735,1,0,0,0,735,737,1,0,0,0,736,727,1,0,0,0,736,
	737,1,0,0,0,737,162,1,0,0,0,738,740,7,3,0,0,739,738,1,0,0,0,739,740,1,0,
	0,0,740,761,1,0,0,0,741,743,3,157,78,0,742,741,1,0,0,0,743,744,1,0,0,0,
	744,742,1,0,0,0,744,745,1,0,0,0,745,753,1,0,0,0,746,750,5,46,0,0,747,749,
	3,157,78,0,748,747,1,0,0,0,749,752,1,0,0,0,750,748,1,0,0,0,750,751,1,0,
	0,0,751,754,1,0,0,0,752,750,1,0,0,0,753,746,1,0,0,0,753,754,1,0,0,0,754,
	762,1,0,0,0,755,757,5,46,0,0,756,758,3,157,78,0,757,756,1,0,0,0,758,759,
	1,0,0,0,759,757,1,0,0,0,759,760,1,0,0,0,760,762,1,0,0,0,761,742,1,0,0,0,
	761,755,1,0,0,0,762,772,1,0,0,0,763,765,7,4,0,0,764,766,7,3,0,0,765,764,
	1,0,0,0,765,766,1,0,0,0,766,768,1,0,0,0,767,769,3,157,78,0,768,767,1,0,
	0,0,769,770,1,0,0,0,770,768,1,0,0,0,770,771,1,0,0,0,771,773,1,0,0,0,772,
	763,1,0,0,0,772,773,1,0,0,0,773,164,1,0,0,0,774,776,3,157,78,0,775,774,
	1,0,0,0,776,777,1,0,0,0,777,775,1,0,0,0,777,778,1,0,0,0,778,166,1,0,0,0,
	779,781,3,157,78,0,780,779,1,0,0,0,781,782,1,0,0,0,782,780,1,0,0,0,782,
	783,1,0,0,0,783,784,1,0,0,0,784,786,5,46,0,0,785,787,3,157,78,0,786,785,
	1,0,0,0,787,788,1,0,0,0,788,786,1,0,0,0,788,789,1,0,0,0,789,168,1,0,0,0,
	790,794,5,34,0,0,791,793,8,5,0,0,792,791,1,0,0,0,793,796,1,0,0,0,794,792,
	1,0,0,0,794,795,1,0,0,0,795,797,1,0,0,0,796,794,1,0,0,0,797,798,5,34,0,
	0,798,170,1,0,0,0,799,800,5,84,0,0,800,801,5,73,0,0,801,802,5,84,0,0,802,
	803,5,76,0,0,803,804,5,69,0,0,804,808,1,0,0,0,805,807,8,6,0,0,806,805,1,
	0,0,0,807,810,1,0,0,0,808,806,1,0,0,0,808,809,1,0,0,0,809,172,1,0,0,0,810,
	808,1,0,0,0,811,812,5,105,0,0,812,816,5,102,0,0,813,814,5,73,0,0,814,816,
	5,70,0,0,815,811,1,0,0,0,815,813,1,0,0,0,816,820,1,0,0,0,817,819,3,187,
	93,0,818,817,1,0,0,0,819,822,1,0,0,0,820,818,1,0,0,0,820,821,1,0,0,0,821,
	823,1,0,0,0,822,820,1,0,0,0,823,824,5,40,0,0,824,174,1,0,0,0,825,826,5,
	101,0,0,826,827,5,108,0,0,827,828,5,115,0,0,828,834,5,101,0,0,829,830,5,
	69,0,0,830,831,5,76,0,0,831,832,5,83,0,0,832,834,5,69,0,0,833,825,1,0,0,
	0,833,829,1,0,0,0,834,838,1,0,0,0,835,837,3,187,93,0,836,835,1,0,0,0,837,
	840,1,0,0,0,838,836,1,0,0,0,838,839,1,0,0,0,839,841,1,0,0,0,840,838,1,0,
	0,0,841,842,5,123,0,0,842,176,1,0,0,0,843,844,5,101,0,0,844,845,5,108,0,
	0,845,846,5,115,0,0,846,847,5,101,0,0,847,848,5,32,0,0,848,849,5,105,0,
	0,849,858,5,102,0,0,850,851,5,69,0,0,851,852,5,76,0,0,852,853,5,83,0,0,
	853,854,5,69,0,0,854,855,5,32,0,0,855,856,5,73,0,0,856,858,5,70,0,0,857,
	843,1,0,0,0,857,850,1,0,0,0,858,862,1,0,0,0,859,861,3,187,93,0,860,859,
	1,0,0,0,861,864,1,0,0,0,862,860,1,0,0,0,862,863,1,0,0,0,863,865,1,0,0,0,
	864,862,1,0,0,0,865,866,5,40,0,0,866,178,1,0,0,0,867,868,5,119,0,0,868,
	869,5,104,0,0,869,870,5,105,0,0,870,871,5,108,0,0,871,878,5,101,0,0,872,
	873,5,87,0,0,873,874,5,72,0,0,874,875,5,73,0,0,875,876,5,76,0,0,876,878,
	5,69,0,0,877,867,1,0,0,0,877,872,1,0,0,0,878,882,1,0,0,0,879,881,3,187,
	93,0,880,879,1,0,0,0,881,884,1,0,0,0,882,880,1,0,0,0,882,883,1,0,0,0,883,
	885,1,0,0,0,884,882,1,0,0,0,885,886,5,40,0,0,886,180,1,0,0,0,887,888,5,
	115,0,0,888,889,5,105,0,0,889,953,5,110,0,0,890,891,5,99,0,0,891,892,5,
	111,0,0,892,953,5,115,0,0,893,894,5,116,0,0,894,895,5,97,0,0,895,953,5,
	110,0,0,896,897,5,101,0,0,897,898,5,120,0,0,898,953,5,112,0,0,899,900,5,
	108,0,0,900,901,5,111,0,0,901,953,5,103,0,0,902,903,5,97,0,0,903,904,5,
	98,0,0,904,953,5,115,0,0,905,906,5,102,0,0,906,907,5,97,0,0,907,908,5,98,
	0,0,908,953,5,115,0,0,909,910,5,110,0,0,910,911,5,111,0,0,911,912,5,114,
	0,0,912,913,5,109,0,0,913,914,5,114,0,0,914,915,5,97,0,0,915,916,5,110,
	0,0,916,953,5,100,0,0,917,918,5,102,0,0,918,919,5,108,0,0,919,920,5,111,
	0,0,920,921,5,111,0,0,921,953,5,114,0,0,922,923,5,115,0,0,923,924,5,99,
	0,0,924,925,5,111,0,0,925,926,5,112,0,0,926,927,5,95,0,0,927,928,5,114,
	0,0,928,929,5,97,0,0,929,930,5,110,0,0,930,931,5,100,0,0,931,932,5,111,
	0,0,932,953,5,109,0,0,933,934,5,115,0,0,934,935,5,113,0,0,935,936,5,114,
	0,0,936,953,5,116,0,0,937,938,5,99,0,0,938,939,5,101,0,0,939,940,5,105,
	0,0,940,953,5,108,0,0,941,942,5,115,0,0,942,943,5,101,0,0,943,944,5,116,
	0,0,944,945,5,95,0,0,945,946,5,115,0,0,946,947,5,101,0,0,947,948,5,101,
	0,0,948,953,5,100,0,0,949,950,5,112,0,0,950,951,5,111,0,0,951,953,5,119,
	0,0,952,887,1,0,0,0,952,890,1,0,0,0,952,893,1,0,0,0,952,896,1,0,0,0,952,
	899,1,0,0,0,952,902,1,0,0,0,952,905,1,0,0,0,952,909,1,0,0,0,952,917,1,0,
	0,0,952,922,1,0,0,0,952,933,1,0,0,0,952,937,1,0,0,0,952,941,1,0,0,0,952,
	949,1,0,0,0,953,954,1,0,0,0,954,955,5,40,0,0,955,182,1,0,0,0,956,958,7,
	0,0,0,957,959,7,1,0,0,958,957,1,0,0,0,959,960,1,0,0,0,960,958,1,0,0,0,960,
	961,1,0,0,0,961,962,1,0,0,0,962,963,5,40,0,0,963,184,1,0,0,0,964,965,7,
	7,0,0,965,186,1,0,0,0,966,968,7,8,0,0,967,966,1,0,0,0,968,969,1,0,0,0,969,
	967,1,0,0,0,969,970,1,0,0,0,970,971,1,0,0,0,971,972,6,93,0,0,972,188,1,
	0,0,0,973,977,7,9,0,0,974,976,8,6,0,0,975,974,1,0,0,0,976,979,1,0,0,0,977,
	975,1,0,0,0,977,978,1,0,0,0,978,981,1,0,0,0,979,977,1,0,0,0,980,982,7,6,
	0,0,981,980,1,0,0,0,981,982,1,0,0,0,982,983,1,0,0,0,983,984,6,94,0,0,984,
	190,1,0,0,0,985,986,5,67,0,0,986,987,5,79,0,0,987,988,5,77,0,0,988,989,
	5,77,0,0,989,990,5,69,0,0,990,991,5,78,0,0,991,992,5,84,0,0,992,996,1,0,
	0,0,993,995,9,0,0,0,994,993,1,0,0,0,995,998,1,0,0,0,996,997,1,0,0,0,996,
	994,1,0,0,0,997,999,1,0,0,0,998,996,1,0,0,0,999,1000,5,69,0,0,1000,1001,
	5,78,0,0,1001,1002,5,68,0,0,1002,1003,5,67,0,0,1003,1004,5,79,0,0,1004,
	1005,5,77,0,0,1005,1006,5,77,0,0,1006,1007,5,69,0,0,1007,1008,5,78,0,0,
	1008,1009,5,84,0,0,1009,1010,1,0,0,0,1010,1011,6,95,0,0,1011,192,1,0,0,
	0,1012,1013,5,86,0,0,1013,1014,5,69,0,0,1014,1015,5,82,0,0,1015,1016,5,
	66,0,0,1016,1017,5,65,0,0,1017,1018,5,84,0,0,1018,1019,5,73,0,0,1019,1020,
	5,77,0,0,1020,1024,1,0,0,0,1021,1023,9,0,0,0,1022,1021,1,0,0,0,1023,1026,
	1,0,0,0,1024,1025,1,0,0,0,1024,1022,1,0,0,0,1025,1027,1,0,0,0,1026,1024,
	1,0,0,0,1027,1028,5,69,0,0,1028,1029,5,78,0,0,1029,1030,5,68,0,0,1030,1031,
	5,86,0,0,1031,1032,5,69,0,0,1032,1033,5,82,0,0,1033,1034,5,66,0,0,1034,
	1035,5,65,0,0,1035,1036,5,84,0,0,1036,1037,5,73,0,0,1037,1038,5,77,0,0,
	1038,1039,1,0,0,0,1039,1040,6,96,0,0,1040,194,1,0,0,0,1041,1042,5,112,0,
	0,1042,1043,5,114,0,0,1043,1044,5,105,0,0,1044,1045,5,110,0,0,1045,1046,
	5,116,0,0,1046,1047,5,102,0,0,1047,1048,1,0,0,0,1048,1049,3,127,63,0,1049,
	1059,3,169,84,0,1050,1054,3,139,69,0,1051,1053,8,10,0,0,1052,1051,1,0,0,
	0,1053,1056,1,0,0,0,1054,1052,1,0,0,0,1054,1055,1,0,0,0,1055,1058,1,0,0,
	0,1056,1054,1,0,0,0,1057,1050,1,0,0,0,1058,1061,1,0,0,0,1059,1057,1,0,0,
	0,1059,1060,1,0,0,0,1060,1062,1,0,0,0,1061,1059,1,0,0,0,1062,1063,3,129,
	64,0,1063,1064,1,0,0,0,1064,1065,6,97,0,0,1065,196,1,0,0,0,1066,1067,7,
	6,0,0,1067,198,1,0,0,0,41,0,698,708,714,717,723,725,729,734,736,739,744,
	750,753,759,761,765,770,772,777,782,788,794,808,815,820,833,838,857,862,
	877,882,952,960,969,977,981,996,1024,1054,1059,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!nmodlLexer.__ATN) {
			nmodlLexer.__ATN = new ATNDeserializer().deserialize(nmodlLexer._serializedATN);
		}

		return nmodlLexer.__ATN;
	}


	static DecisionsToDFA = nmodlLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}